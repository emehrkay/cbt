syntax = "proto3";

package train;

option go_package = "github.com/emehrkay/cbt/pkg/rpc";

service Train {
    // auth
    rpc Login (LoginRequest) returns (LoginResponse) {}

    // ticket management
    rpc TicketDetails (TicketDetailsRequest) returns (TicketResponse) {}
    rpc BuyTicket (BuyTicketRequest) returns (TicketResponse) {}
    rpc RemoveTicket (RemoveTicketRequest) returns (Empty) {}
    rpc ChangeTicket (ChangeTicketRequest) returns (TicketResponse) {}

    // details
    rpc TrainOpenSeats (TrainOpenSeatRequest) returns (TrainOpenSeatResponses) {}
    rpc TrainDetails (TrainDetailsRequest) returns (TrainDetailsResponse) {}
}

message Empty{}

message LoginRequest {
    string email = 1;
    string password = 2;
}

message LoginResponse {
    string jwt = 1;
}

message TicketDetailsRequest {
    string ticket_id = 1;
}

message BuyTicketRequest {}

message TicketResponse {
    string id = 1;
    string user_id = 2;
    string source = 3;
    string destination = 4;
    float price = 5;
    string car = 6;
    int32 seat = 7;
}

message TicketsResponse {
    repeated TicketResponse tickets = 1;
}

message RemoveTicketRequest {
    string ticket_id = 1;
}

message ChangeTicketRequest {
    string ticket_id = 1;
    string car = 2;
    int32 seat = 3;
}

message TrainDetailsRequest {
    string query_string = 1; //not used, but would be cool
}

message TrainOpenSeatRequest {}

message TrainOpenSeatResponse {
    string car = 1;
    repeated int32 seats = 2;
}

message TrainOpenSeatResponses {
    repeated  TrainOpenSeatResponse seats = 1;
}

message User {
    string id = 1;
    string email = 2;
    string first_name = 3;
    string last_name = 4;
    string level = 5;
}

message TrainResponse {
    string name = 1;
    string from = 2;
    string to = 3;
}

message TrainDetails {
    User user = 1;
    TicketResponse ticket = 2;
    TrainResponse train = 3;
}

message TrainDetailsResponse {
    repeated TrainDetails trains = 1;
}